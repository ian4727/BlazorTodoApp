@page "/"
@using BlazorTodoApp.Components.TodoApp

@rendermode InteractiveServer

@inject IJSRuntime JSRuntime

<PageTitle>Blazor Todo App</PageTitle>

<h1>todos</h1>

<AddTodo OnAdd="@AddTodoItem" />

<TodoList TItem="TodoItem" Todos="@todos" />

<Footer TodosLeftCount="@TodosLeftCount" />

@code {
    async Task AddTodoItem(string newTodoTitle)
    {
        if (!string.IsNullOrWhiteSpace(newTodoTitle))
        {
            todos.Add(new TodoItem { Title = newTodoTitle });
        }
    }

    private int TodosLeftCount()
    {
        return todos.Count(todo => !todo.IsDone);
    }

    private List<TodoItem> todos = new List<TodoItem>();

    private async Task<string> LoadItemFromLocalStorage(string key)
    {
        return await JSRuntime.InvokeAsync<string>("getItem", key);
    }

    private async Task SaveItemToLocalStorage(string key, string value)
    {
        await JSRuntime.InvokeVoidAsync("setItem", key, value);
    }
    

    private async Task SaveAndLoadFromLocalStorage()
    {
        // Save item to local storage
        await SaveItemToLocalStorage("todoItem", "Example Todo Item");

        // Load item from local storage
        var loadedItem = await LoadItemFromLocalStorage("todoItem");

        // Output loaded item
        Console.WriteLine("Loaded item from local storage: " + loadedItem);
    }
}